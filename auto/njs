
# Copyright (C) NGINX, Inc.


nxt_found=no
NXT_HAVE_NJS=NO

if [ $NXT_TLS = NO ]; then
    $echo
    $echo $0: error: openssl library is required by njs.
    $echo
    exit 1;
fi

if [ $NXT_REGEX = NO ]; then
    $echo
    $echo $0: error: pcre library is required by njs.
    $echo
    exit 1;
fi

nxt_feature="NJS library"
nxt_feature_name=NXT_HAVE_NJS
nxt_feature_run=no
nxt_feature_libs="$NXT_LIBM $NXT_LIB_AUX_LIBS -lnjs"
nxt_feature_test="#include <njs.h>

                  int main() {
                      njs_vm_t      *vm;
                      njs_vm_opt_t  opts;

                      njs_vm_opt_init(&opts);

                      vm = njs_vm_create(&opts);
                      if (vm == NULL)
                          return 1;
                      return 0;
                  }"
. auto/feature

if [ $nxt_found = no ]; then
    if /bin/sh -c "(pkg-config njs --exists)" >> $NXT_AUTOCONF_ERR 2>&1;
    then
        NXT_NJS_CFLAGS=`pkg-config njs --cflags`
        NXT_NJS_LIBS=`pkg-config njs --libs`

        nxt_feature="NJS library (via pkg-config)"
        nxt_feature_name=NXT_HAVE_NJS
        nxt_feature_run=no
        nxt_feature_incs=$NXT_NJS_CFLAGS
        nxt_feature_libs=$NXT_NJS_LIBS
        nxt_feature_test="#include <njs.h>

                  int main() {
                      njs_vm_t      *vm;
                      njs_vm_opt_t  opts;

                      njs_vm_opt_init(&opts);

                      vm = njs_vm_create(&opts);
                      if (vm == NULL)
                          return 1;
                      return 0;
                  }"
        . auto/feature

	if [ $nxt_found = no ]; then
            $echo
            $echo $0: error: no NJS library found.
            $echo
            exit 1;
	fi
    fi
else
    NXT_AUX_LIBS="$NXT_LIB_AUX_LIBS -lnjs"
fi

NXT_LIB_AUX_LIBS="$NXT_LIB_AUX_LIBS $NXT_NJS_LIBS"
NXT_LIB_AUX_CFLAGS="$NXT_LIB_AUX_CFLAGS $NXT_NJS_CFLAGS"
